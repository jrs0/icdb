// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// new_icd10_impl
Rcpp::List new_icd10_impl(const Rcpp::CharacterVector& str, const Rcpp::List& code_def);
RcppExport SEXP _icdb_new_icd10_impl(SEXP strSEXP, SEXP code_defSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::CharacterVector& >::type str(strSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type code_def(code_defSEXP);
    rcpp_result_gen = Rcpp::wrap(new_icd10_impl(str, code_def));
    return rcpp_result_gen;
END_RCPP
}
// start_profiler
SEXP start_profiler(SEXP str);
RcppExport SEXP _icdb_start_profiler(SEXP strSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type str(strSEXP);
    rcpp_result_gen = Rcpp::wrap(start_profiler(str));
    return rcpp_result_gen;
END_RCPP
}
// stop_profiler
SEXP stop_profiler();
RcppExport SEXP _icdb_stop_profiler() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(stop_profiler());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_icdb_new_icd10_impl", (DL_FUNC) &_icdb_new_icd10_impl, 2},
    {"_icdb_start_profiler", (DL_FUNC) &_icdb_start_profiler, 1},
    {"_icdb_stop_profiler", (DL_FUNC) &_icdb_stop_profiler, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_icdb(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
